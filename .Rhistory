visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = list(
background = "#0085AF",
border = "#013848",
highlight = "#FF8000"
),
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group") %>%
visLayout(randomSeed = 11)
nodes
edges <-data.frame(
to=wgcna_data$V2,
from=wgcna_data$tissue,
width=wgcna_data$V3,
edge = wgcna_data$pheno)
nodes <- dplyr::select(wgcna_data, V2,tissue)
nodes <- nodes %>%
arrange(V2) %>%
filter(duplicated(V2) == FALSE)
nodes[nrow(nodes) + 1,] = c("lu", "tissue")
nodes[nrow(nodes) + 1,] = c("liv","tissue")
nodes[nrow(nodes) + 1,] = c("gi","tissue")
nodes[nrow(nodes) + 1,] = c("hyp","tissue")
nodes[nrow(nodes) + 1,] = c("kid","tissue")
colnames(nodes) <- c("label", "id")
nodes$id <- nodes$label
network <- graph_from_data_frame(d=edges, vertices=nodes, directed=F)
E(network)$color <- coul[as.numeric(as.factor(edges$edge))]
E(network)$name <- as.factor(edges$edge)
#V(network)$color <- cols[as.numeric(as.factor(nodes$))]
edges$width <- scales::rescale(wgcna_data$V3, to = c(1, 10))  # Normalize to 1–10
#Louvain Comunity Detection
cluster <- cluster_louvain(network)
cluster_df <- data.frame(as.list(membership(cluster)))
cluster_df <- as.data.frame(t(cluster_df))
cluster_df$label <- rownames(cluster_df)
#Create group column
nodes <- left_join(nodes, cluster_df, by = "id")
nodes
edges <-data.frame(
to=wgcna_data$V2,
from=wgcna_data$tissue,
width=wgcna_data$V3,
edge = wgcna_data$pheno)
nodes <- dplyr::select(wgcna_data, V2,tissue)
nodes <- nodes %>%
arrange(V2) %>%
filter(duplicated(V2) == FALSE)
nodes[nrow(nodes) + 1,] = c("lu", "tissue")
nodes[nrow(nodes) + 1,] = c("liv","tissue")
nodes[nrow(nodes) + 1,] = c("gi","tissue")
nodes[nrow(nodes) + 1,] = c("hyp","tissue")
nodes[nrow(nodes) + 1,] = c("kid","tissue")
nodes
edges <-data.frame(
to=wgcna_data$V2,
from=wgcna_data$tissue,
width=wgcna_data$V3,
edge = wgcna_data$pheno)
nodes <- dplyr::select(wgcna_data, V2,tissue)
nodes <- nodes %>%
arrange(V2) %>%
filter(duplicated(V2) == FALSE)
nodes[nrow(nodes) + 1,] = c("lu", "tissue")
nodes[nrow(nodes) + 1,] = c("liv","tissue")
nodes[nrow(nodes) + 1,] = c("gi","tissue")
nodes[nrow(nodes) + 1,] = c("hyp","tissue")
nodes[nrow(nodes) + 1,] = c("kid","tissue")
colnames(nodes) <- c("label", "tissue")
#nodes$id <- nodes$label
network <- graph_from_data_frame(d=edges, vertices=nodes, directed=F)
E(network)$color <- coul[as.numeric(as.factor(edges$edge))]
E(network)$name <- as.factor(edges$edge)
V(network)$color <- cols[as.numeric(as.factor(nodes$tissue))]
edges$width <- scales::rescale(wgcna_data$V3, to = c(1, 10))  # Normalize to 1–10
#Louvain Comunity Detection
cluster <- cluster_louvain(network)
cluster_df <- data.frame(as.list(membership(cluster)))
cluster_df <- as.data.frame(t(cluster_df))
cluster_df$label <- rownames(cluster_df)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = list(
background = "#0085AF",
border = "#013848",
highlight = "#FF8000"
),
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
nodes$id <- nodes$label
network <- graph_from_data_frame(d=edges, vertices=nodes, directed=F)
edges <-data.frame(
to=wgcna_data$V2,
from=wgcna_data$tissue,
width=wgcna_data$V3,
edge = wgcna_data$pheno)
nodes <- dplyr::select(wgcna_data, V2,tissue)
nodes <- nodes %>%
arrange(V2) %>%
filter(duplicated(V2) == FALSE)
nodes[nrow(nodes) + 1,] = c("lu", "tissue")
nodes[nrow(nodes) + 1,] = c("liv","tissue")
nodes[nrow(nodes) + 1,] = c("gi","tissue")
nodes[nrow(nodes) + 1,] = c("hyp","tissue")
nodes[nrow(nodes) + 1,] = c("kid","tissue")
colnames(nodes) <- c("label", "tissue")
nodes$id <- nodes$label
network <- graph_from_data_frame(d=edges, vertices=nodes, directed=F)
E(network)$color <- coul[as.numeric(as.factor(edges$edge))]
E(network)$name <- as.factor(edges$edge)
V(network)$color <- cols[as.numeric(as.factor(nodes$tissue))]
edges$width <- scales::rescale(wgcna_data$V3, to = c(1, 10))  # Normalize to 1–10
#Louvain Comunity Detection
cluster <- cluster_louvain(network)
cluster_df <- data.frame(as.list(membership(cluster)))
cluster_df <- as.data.frame(t(cluster_df))
cluster_df$label <- rownames(cluster_df)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = list(
background = "#0085AF",
border = "#013848",
highlight = "#FF8000"
),
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color
),
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
nodes
nodes$color.background <- cols[nodes$tissue]
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
nodes$color.background <- cols[nodes$tissue]
nodes$color.border <- cols[nodes$tissue]
#Louvain Comunity Detection
cluster <- cluster_louvain(network)
cluster_df <- data.frame(as.list(membership(cluster)))
cluster_df <- as.data.frame(t(cluster_df))
cluster_df$label <- rownames(cluster_df)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = list(highlight = "#C62F4B")
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
edges
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = color
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = color
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
edges$color <- coul[edges$edge]
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = color
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges, width = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
color = color,
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE,
color = color
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "edge") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges, width = "100%", hight = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges, width = "100%", height = "100%") %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
visNetwork(nodes, edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(
shadow = FALSE
) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "tissue") %>%
visLayout(randomSeed = 11)
shinyUI(
fluidPage(
visNetworkOutput("network")
)
)
shinyServer(function(input, output) {
output$network <- renderVisNetwork({
visNetwork(nodes, edges) %>%
visIgraphLayout()
})
})
shinyUI(
fluidPage(
visNetworkOutput("network")
)
)
output$network <- renderVisNetwork({
selected_nodes <- nodes[nodes$tissue == input$tissue_selector, ]
selected_edges <- edges[edges$from %in% selected_nodes$id | edges$to %in% selected_nodes$id, ]
visNetwork(selected_nodes, selected_edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(shadow = FALSE) %>%
visOptions(
highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),
selectedBy = "tissue"
) %>%
visLayout(randomSeed = 11)
})
input
server
wgcna_data_dehy <-read.csv("go_wgcna_final_dehy")
wgcna_data_dehy <-read.csv("go_wgcna_final_dehy.csv")
wgcna_data_dehy
wgcna_data_go_diet.csv
wgcna_data_diet <-read.csv("wgcna_data_go_diet.csv")
wgcna_data_diet
View(wgcna_data_dehy)
View(wgcna_data_diet)
coul = c(
"trt" = "#fdc328",
"iCa"="#f79342",
"Crea"="#e4695e",
"Cl"="#c23c81",
"mean_RQ"="#920fa3",
"AnGap"="#6c00a8",
"mean_H2Omg"="#1fa088",
"Glu" = "#31688e",
"BUN"="#886EA0",
"K" = "darkgrey" ,
"TCO2"= "#70809c",
"Hct"= "plum",
"mean_EE"="#4cc26c",
"sex"="purple",
"mass"="pink",
"Na"="yellow",
"Hb."="lightblue",
"Osmolality"="tan")
cols <- c("kid"="#E3EB94","liv"="#A9DAAF","lu"="#94BEBD", "hyp"="#A47FC7", "gi" = "#959BB8")
# Define UI ----
ui <- fluidPage(
tags$head(
tags$style(HTML("
.main-title {
font-size: 2.5em;
margin-bottom: 20px;
}
.sidebar-panel {
padding: 20px;
border-radius: 10px;
color: white;
}
.main-panel {
padding: 20px;
border-radius: 10px;
}
.vis-network {
height: 700px !important;
}
"))
),
fluidRow(
column(
12,
div(class = "main-title text-center", "Impacts of dietary fat on multi tissue gene expression in the desert-adapted cactus mouse ")
)
),
fluidRow(
column(
3,
div(class = "sidebar-panel",
helpText("Explore the gene ontology results from the diet experiment."),
selectInput("dataset_choice", "Choose Dataset:",
choices = c("diet" = "wgcna_data_go.csv",
"dehydration" = "go_wgcna_final_dehy.csv")),
hr(),
fluidRow(column(12, verbatimTextOutput("value")))
)
)
),
column(
9,
div(class = "main-panel",
visNetworkOutput("network", height = "700px")
)
)
)
server <- function(input, output) {
data_input <- reactive({
req(input$dataset_choice)
read.csv(input$dataset_choice)
})
network_data <- reactive({
wgcna_data <- data_input()
edges <- data.frame(
to = wgcna_data$V2,
from = wgcna_data$tissue,
width = wgcna_data$V3,
edge = wgcna_data$pheno
)
nodes <- dplyr::select(wgcna_data, V2, tissue) %>%
arrange(V2) %>%
filter(duplicated(V2) == FALSE)
nodes[nrow(nodes) + 1, ] <- c("lu", "tissue")
nodes[nrow(nodes) + 1, ] <- c("liv", "tissue")
nodes[nrow(nodes) + 1, ] <- c("gi", "tissue")
nodes[nrow(nodes) + 1, ] <- c("hyp", "tissue")
nodes[nrow(nodes) + 1, ] <- c("kid", "tissue")
colnames(nodes) <- c("label", "tissue")
nodes$id <- nodes$label
network <- graph_from_data_frame(d = edges, vertices = nodes, directed = FALSE)
edges$width <- scales::rescale(wgcna_data$V3, to = c(1, 10))
#edges$color <- coul[edges$edge]
nodes$color.background <- cols[nodes$tissue]
nodes$color.border <- cols[nodes$tissue]
list(nodes = nodes, edges = edges)
#Louvain Comunity Detection
cluster <- cluster_louvain(network)
cluster_df <- data.frame(as.list(membership(cluster)))
cluster_df <- as.data.frame(t(cluster_df))
cluster_df$label <- rownames(cluster_df)
})
output$value <- renderPrint({ input$dataset_choice })
output$network <- renderVisNetwork({
net_data <- network_data()
visNetwork(net_data$nodes, net_data$edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(shadow = FALSE) %>%
visOptions(
highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),
selectedBy = "tissue"
) %>%
visLayout(randomSeed = 11)
})
}
rsconnect::appDependencies()
visNetwork(net_data$nodes, net_data$edges) %>%
visIgraphLayout() %>%
visNodes(
shape = "dot",
shadow = list(enabled = TRUE, size = 10),
font = list(size = 40)
) %>%
visEdges(shadow = FALSE) %>%
visOptions(
highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),
selectedBy = "tissue"
) %>%
visLayout(randomSeed = 11)
net_data
